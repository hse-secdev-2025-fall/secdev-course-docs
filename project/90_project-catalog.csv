id, title               , one_liner                                          , entities                                                                      , must_endpoints                                             , security_focus                                  , stretch                                     , stack
 1, Habit Tracker       , Отслеживание привычек и отметок по дням            , "User; Habit(name, periodicity); Checkin(date, value)"                        , CRUD /habits; CRUD /checkins; GET /stats                   , AuthN/AuthZ; owner-only; validation(periodicity), Streaks; экспорт CSV; напоминания (заглушка), Python/FastAPI + SQLite/Postgres + Pytest
 2, Study Notes         , Личные конспекты с тегами                          , "User; Note(title, body); Tag(name); NoteTag"                                 , CRUD /notes; CRUD /tags; GET /notes?tag=                   , AuthN/AuthZ; owner-only; size limits            , Импорт/экспорт Markdown; поиск (LIKE)       , Python/FastAPI + SQLite/Postgres + Pytest
 3, Bookmark Manager    , Закладки с категориями и быстрым поиском           , "User; Bookmark(title, url, tags, notes)"                                     , CRUD /bookmarks; GET /bookmarks?query=                     , AuthN/AuthZ; owner-only; URL validation         , Фавиконы (заглушка); импорт CSV             , Python/FastAPI + SQLite/Postgres + Pytest
 4, Task Tracker        , Личный таск-менеджер с приоритетами                , "User; Task(title, status, priority, due_at)"                                 , CRUD /tasks; GET /tasks?status=&due<                       , AuthN/AuthZ; owner-only; validation(status)     , Канбан-вью (позже); повторяющиеся задачи    , Python/FastAPI + SQLite/Postgres + Pytest
 5, Reading List        , Список книг/статей «к прочтению»                   , "User; Entry(title, kind, link, status)"                                      , CRUD /entries; GET /entries?status=                        , AuthN/AuthZ; owner-only; validation(kind/status), Интеграция с метаданными (заглушка)         , Python/FastAPI + SQLite/Postgres + Pytest
 6, Recipe Box          , Менеджер рецептов с ингредиентами                  , "User; Recipe(title, steps); Ingredient(name); RecipeIngredient(amount, unit)", CRUD /recipes; CRUD /ingredients; GET /recipes?ingredient= , AuthN/AuthZ; owner-only; validation(units)      , План питания (календарь-эмуляция)           , Python/FastAPI + SQLite/Postgres + Pytest
 7, Workout Log         , Тренировки и подходы                               , "User; Workout(date, note); Exercise(name); Set(reps, weight)"                , CRUD /workouts; CRUD /exercises; GET /stats                , AuthN/AuthZ; owner-only; numeric validation     , Пресеты планов; экспорт CSV                 , Python/FastAPI + SQLite/Postgres + Pytest
 8, Idea Backlog        , Каталог идей с оценкой ценности                    , "User; Idea(title, impact, effort, notes)"                                    , CRUD /ideas; GET /ideas?sort=score                         , AuthN/AuthZ; owner-only; validation(ranges)     , Матрица приоритизации; метки                , Python/FastAPI + SQLite/Postgres + Pytest
 9, Wishlist            , Список желаемых вещей/наборов                      , "User; Wish(title, link, price_estimate, notes)"                              , CRUD /wishes; GET /wishes?price<                           , AuthN/AuthZ; owner-only; numeric validation     , Категории; сортировка; экспорт              , Python/FastAPI + SQLite/Postgres + Pytest
10, Learning Flashcards , Карточки для запоминания с простым повторением     , "User; Deck(title); Card(front, back, deck_id)"                               , CRUD /decks; CRUD /cards; GET /decks/{id}/review           , AuthN/AuthZ; owner-only; rate limit review      , Алгоритм интервальных повторений            , Python/FastAPI + SQLite/Postgres + Pytest
11, Bug Lite            , Упрощённый баг-трекер без сложных ролей            , "User; Issue(title, status, labels)"                                          , CRUD /issues; GET /issues?status=&label=                   , AuthN/AuthZ; owner-only; validation(status)     , Комментарии; экспорт; шаблоны               , Python/FastAPI + SQLite/Postgres + Pytest
12, Feature Votes       , Голосование за фичи проекта                        , "User; Feature(title, desc); Vote(value)"                                     , CRUD /features; POST /features/{id}/vote; GET /features/top, AuthN/AuthZ; owner-only votes; anti-duplicate   , Таймбоксы; сортировки; визуализация         , Python/FastAPI + SQLite/Postgres + Pytest
13, Sprint Retros       , Заметки ретроспектив по спринтам                   , "User; Retro(session_date); Item(what_went_well, to_improve, actions)"        , CRUD /retros; GET /retros?from=&to=                        , AuthN/AuthZ; owner-only; date validation        , Экспорт PDF (заглушка)                      , Python/FastAPI + SQLite/Postgres + Pytest
14, Roommate Chores     , Трекер домашних дел между участниками              , "User; Chore(title, cadence); Assignment(user_id, due_at, status)"            , CRUD /chores; CRUD /assignments; GET /stats                , AuthN/AuthZ; owner-only; validation(cadence)    , Простые уведомления (заглушка)              , Python/FastAPI + SQLite/Postgres + Pytest
15, Maintenance Requests, Заявки на мелкий ремонт (домашние/офисные)         , "User; Request(title, category, status)"                                      , CRUD /requests; GET /requests?status=&category=            , AuthN/AuthZ; owner-only; validation(category)   , Комментарии; приоритеты; экспорт            , Python/FastAPI + SQLite/Postgres + Pytest
16, Study Planner       , "Учебный план: темы, дедлайны, прогресс"           , "User; Topic(title, due_at, status)"                                          , CRUD /topics; GET /topics?status=                          , AuthN/AuthZ; owner-only; date validation        , Импорт из CSV; календари (заглушка)         , Python/FastAPI + SQLite/Postgres + Pytest
17, Media Catalog       , Каталог фильмов/курсов «к просмотру»               , "User; Media(title, kind, year, status)"                                      , CRUD /media; GET /media?kind=&status=                      , AuthN/AuthZ; owner-only; validation(kind/year)  , Метаданные по названию (заглушка)           , Python/FastAPI + SQLite/Postgres + Pytest
18, Study Groups        , Группы по интересам и активности (без чатов)       , "User; Group(title); Membership(role); Activity(title, date)"                 , CRUD /groups; CRUD /activities; GET /groups/{id}/members   , AuthN/AuthZ; owner-only; validation(roles)      , Приглашения (коды); экспорт участников      , Python/FastAPI + SQLite/Postgres + Pytest
19, Idea Kanban         , Канбан для идей/мини-проектов                      , "User; Card(title, column, order_idx)"                                        , CRUD /cards; PATCH /cards/{id}/move; GET /cards?column=    , AuthN/AuthZ; owner-only; validation(columns)    , Мульт-доски; архив; импорт                  , Python/FastAPI + SQLite/Postgres + Pytest
20, Simple Blog         , Мини-блог без публичных аккаунтов                  , "User; Post(title, body, status); Tag"                                        , CRUD /posts; GET /posts?status=&tag=                       , AuthN/AuthZ; owner-only; content length         , Публичная лента (read-only)                 , Python/FastAPI + SQLite/Postgres + Pytest
21, Event Planner       , Планирование локальных событий без приглашений     , "User; Event(title, date, place, note)"                                       , CRUD /events; GET /events?from=&to=                        , AuthN/AuthZ; owner-only; date validation        , Календарь (заглушка); дубликаты             , Python/FastAPI + SQLite/Postgres + Pytest
22, Reading Highlights  , Выжимки/цитаты из прочитанного                     , "User; Highlight(text, source, tags)"                                         , CRUD /highlights; GET /highlights?tag=                     , AuthN/AuthZ; owner-only; size limits            , Экспорт Markdown; поиск                     , Python/FastAPI + SQLite/Postgres + Pytest
23, OKR Tracker         , Личные цели и ключевые результаты                  , "User; Objective(title, period); KeyResult(title, metric, progress)"          , CRUD /objectives; CRUD /key-results; GET /stats            , AuthN/AuthZ; owner-only; validation(periods)    , Шаблоны периодов; отчёты                    , Python/FastAPI + SQLite/Postgres + Pytest
24, Time Tracker        , Учёт времени по задачам/проектам                   , "User; Project(title); Entry(task, started_at, duration)"                     , CRUD /projects; CRUD /entries; GET /stats                  , AuthN/AuthZ; owner-only; duration validation    , Экспорт CSV; отчёт по неделям               , Python/FastAPI + SQLite/Postgres + Pytest
25, Notebook Collections, Коллекции заметок/ссылок по темам                  , "User; Collection(title); Item(title, link, notes)"                           , CRUD /collections; CRUD /items; GET /collections/{id}/items, AuthN/AuthZ; owner-only; link validation        , Пакетный импорт; сортировки                 , Python/FastAPI + SQLite/Postgres + Pytest
26, Equipment Checkout  , Учёт выдачи оборудования (учебный)                 , "User; Asset(title, inv_id); Checkout(asset_id, due_at, status)"              , CRUD /assets; CRUD /checkouts; GET /overdue                , AuthN/AuthZ; owner-only; status validation      , Штрихкоды (заглушка); отчёты                , Python/FastAPI + SQLite/Postgres + Pytest
27, Roadmap Planner     , План развития продукта/учебного курса              , "User; Roadmap(title); Milestone(title, due_at, status)"                      , CRUD /roadmaps; CRUD /milestones; GET /stats               , AuthN/AuthZ; owner-only; date validation        , Экспорт; теги/фильтры                       , Python/FastAPI + SQLite/Postgres + Pytest
28, Issue Lite          , Упрощённые Issues для личных проектов              , "User; Issue(title, status, labels, due_at)"                                  , CRUD /issues; GET /issues?label=&status=                   , AuthN/AuthZ; owner-only; validation(status)     , Комментарии; шаблоны задач                  , Python/FastAPI + SQLite/Postgres + Pytest
29, Quiz Builder        , Создание тестов с вопросами/ответами               , "User; Quiz(title); Question(text, type); Choice(text, correct)"              , CRUD /quizzes; CRUD /questions; GET /quizzes/{id}/preview  , AuthN/AuthZ; owner-only; validation(types)      , Прохождение (локально); результаты          , Python/FastAPI + SQLite/Postgres + Pytest
30, Simple CRM (Mock)   , Мини-CRM с фиктивными контактами (без ПДн)         , "User; Company(name, sector); Lead(title, company_id, status)"                , CRUD /companies; CRUD /leads; GET /leads?status=           , AuthN/AuthZ; owner-only; avoid PII              , Воронка (агрегации); импорт мок-данных      , Python/FastAPI + SQLite/Postgres + Pytest
31, Idea Voting Board   , Доска голосований за идеи команды                  , "User; Idea(title); Vote(value)"                                              , CRUD /ideas; POST /ideas/{id}/vote; GET /ideas/score       , AuthN/AuthZ; owner-only; anti-dup vote          , Таймфреймы; сортировки                      , Python/FastAPI + SQLite/Postgres + Pytest
32, Study Habits Coach  , Планы занятий и отметки выполнения                 , "User; Plan(title, cadence); Mark(date, value)"                               , CRUD /plans; CRUD /marks; GET /stats                       , AuthN/AuthZ; owner-only; cadence validation     , Рекомендации (заглушка); экспорт            , Python/FastAPI + SQLite/Postgres + Pytest
33, Maintenance Logs    , Журнал обслуживания техники/ПК                     , "User; Device(title, serial); Log(date, action, cost_est)"                    , CRUD /devices; CRUD /logs; GET /stats                      , AuthN/AuthZ; owner-only; numeric validation     , Шаблоны сервисов; экспорт                   , Python/FastAPI + SQLite/Postgres + Pytest
34, Parking Slots (Mock), Бронирование парковочных мест (без платежей)       , "User; Slot(code); Booking(slot_id, date, status)"                            , CRUD /slots; CRUD /bookings; GET /availability             , AuthN/AuthZ; owner-only; conflict checks        , Повторяющиеся брони; отчёты                 , Python/FastAPI + SQLite/Postgres + Pytest
35, Suggestion Box      , Анонимные предложения в «ящик идей» (через user-id), "User; Suggestion(title, text, status)"                                       , CRUD /suggestions; GET /suggestions?status=                , AuthN/AuthZ; owner-only; moderation status      , Категории; метки; экспорт                   , Python/FastAPI + SQLite/Postgres + Pytest
